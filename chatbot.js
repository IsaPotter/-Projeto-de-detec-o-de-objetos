document.addEventListener('DOMContentLoaded', () => {
    const chatFab = document.getElementById('chat-fab');
    const chatWindow = document.getElementById('chat-window');
    const chatBody = document.querySelector('.chat-body'); // Usado para verificar se o chat est√° aberto
    const closeChatBtn = document.getElementById('close-chat-btn');
    const chatMessages = document.getElementById('chat-messages');
    const chatForm = document.getElementById('chat-form');
    const chatInput = document.getElementById('chat-input');

    // Abrir e fechar o chat
    chatFab.addEventListener('click', () => {
        chatWindow.classList.toggle('open');
        chatFab.classList.toggle('open');
        // Se o chat est√° abrindo e n√£o tem mensagens, adiciona a sauda√ß√£o
        if (chatWindow.classList.contains('open') && chatMessages.children.length === 0) {
            setTimeout(() => {
                addMessage('bot', 'Ol√°! üëã Sou seu assistente virtual. Como posso ajudar?');
            }, 300);
        }
    });

    closeChatBtn.addEventListener('click', () => {
        chatWindow.classList.remove('open');
        chatFab.classList.remove('open');
    });

    // Enviar mensagem
    chatForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const userMessage = chatInput.value.trim();
        if (userMessage) {
            addMessage('user', userMessage);
            chatInput.value = '';
            chatInput.disabled = true; // Desabilita o input enquanto o bot responde
            
            showTypingIndicator();

            // Simula um tempo de "pensamento" e depois digita a resposta
            setTimeout(() => {
                const botResponse = getBotResponse(userMessage);
                typeMessage(botResponse);
                chatInput.disabled = false; // Reabilita o input
                chatInput.focus();
            }, 1200); // Atraso para o bot "pensar"
        }
    });

    // Adiciona mensagem √† janela de chat
    function addMessage(sender, text, isTyping = false) {
        const messageElement = document.createElement('div');
        messageElement.classList.add('chat-message', `${sender}-message`);
        
        const p = document.createElement('p');
        if (isTyping) {
            // L√≥gica de digita√ß√£o ser√° tratada por typeMessage
        } else {
            p.innerHTML = text; // Permite renderizar links HTML
        }
        messageElement.appendChild(p);

        chatMessages.appendChild(messageElement);
        chatMessages.scrollTop = chatMessages.scrollHeight;
        return p; // Retorna o par√°grafo para a fun√ß√£o de digita√ß√£o
    }

    // Efeito de digita√ß√£o
    function typeMessage(text) {
        removeTypingIndicator();
        const p = addMessage('bot', '', true); // Cria a bolha de mensagem vazia
        let i = 0;
        const speed = 30; // Velocidade da digita√ß√£o em milissegundos

        function typeWriter() {
            if (i < text.length) {
                p.innerHTML += text.charAt(i);
                i++;
                chatMessages.scrollTop = chatMessages.scrollHeight;
                setTimeout(typeWriter, speed);
            }
        }
        typeWriter();
    }

    // Mostra o indicador "digitando..."
    function showTypingIndicator() {
        const typingElement = document.createElement('div');
        typingElement.classList.add('chat-message', 'bot-message', 'typing-indicator');
        typingElement.innerHTML = `<p><span class="dot"></span><span class="dot"></span><span class="dot"></span></p>`;
        chatMessages.appendChild(typingElement);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    // Remove o indicador "digitando..."
    function removeTypingIndicator() {
        const indicator = document.querySelector('.typing-indicator');
        if (indicator) {
            indicator.remove();
        }
    }

    // L√≥gica de resposta do bot aprimorada
    function getBotResponse(userInput) {
        const lowerInput = userInput.toLowerCase();

        // Palavras-chave para cada t√≥pico
        const keywords = {
            saudacao: ['ol√°', 'oi', 'bom dia', 'boa tarde', 'boa noite', 'ei', 'hey'],
            preco: ['pre√ßo', 'plano', 'premium', 'custo', 'pagar', 'assinatura', 'gratuito', 'free'],
            uso: ['como funciona', 'usar', 'iniciar', 'come√ßar', 'webcam', 'ativar', 'detec√ß√£o', 'objeto', 'reconhecer', 'identificar'],
            privacidade: ['privacidade', 'seguro', 'dados', 'armazenar', 'seguran√ßa', 'protegido'],
            instalacao: ['instalar', 'baixar', 'app', 'aplicativo', 'download'],
            suporte: ['contato', 'suporte', 'ajuda', 'problema', 'erro', 'bug'],
            sobre: ['quem criou', 'desenvolveu', 'sobre', 'projeto', 'desenvolvedor', 'isabela'],
            faq: ['faq', 'perguntas', 'duvidas', 'frequentes'],
            relatorios: ['relat√≥rio', 'relatorios', 'dados', 'estat√≠sticas', 'estatisticas', 'gr√°fico', 'grafico'],
            perfil: ['perfil', 'conta', 'login', 'cadastro', 'registrar', 'senha', 'alterar senha'],
            alertas: ['alerta', 'notifica√ß√£o', 'notificacao', 'aviso', 'monitorar', 'monitoramento'],
            autenticacao: ['2fa', 'dois fatores', 'autentica√ß√£o', 'autenticacao', 'google', 'github', 'oauth'],
            sessoes: ['sess√£o', 'sessao', 'logout', 'desconectar', 'revogar'],
            agradecimento: ['obrigado', 'valeu', 'agradecido', 'thanks', 'thank you']
        };

        // Fun√ß√£o auxiliar para verificar se alguma palavra-chave est√° presente
        function hasKeyword(category) {
            return keywords[category].some(word => lowerInput.includes(word));
        }

        // Respostas por categoria
        if (hasKeyword('saudacao')) {
            return 'Ol√°! üëã Como posso te ajudar hoje?';
        }

        if (hasKeyword('preco')) {
            return 'Temos um plano Gratuito com detec√ß√£o b√°sica e um Premium com recursos avan√ßados, como detec√ß√£o de m√∫ltiplos objetos, relat√≥rios e alertas. Voc√™ pode ver todos os detalhes na nossa <a href="assinatura.html">p√°gina de assinatura</a>.';
        }

        if (hasKeyword('uso')) {
            return '√â simples! Na p√°gina inicial, clique em "Ativar Webcam", permita o acesso √† c√¢mera e posicione objetos na frente dela. A detec√ß√£o √© autom√°tica usando TensorFlow.js! Suportamos detec√ß√£o de pessoas, animais, objetos comuns e muito mais!';
        }

        if (hasKeyword('privacidade')) {
            return 'Sua privacidade √© nossa prioridade. Todo o processamento acontece no seu navegador, e nenhuma imagem √© enviada para nossos servidores. Saiba mais na nossa <a href="politica.html">Pol√≠tica de Privacidade</a>.';
        }

        if (hasKeyword('instalacao')) {
            return 'N√£o precisa instalar nada! Nosso sistema funciona 100% online, direto no seu navegador. Compat√≠vel com desktop e mobile.';
        }

        if (hasKeyword('suporte')) {
            return 'Para suporte, voc√™ pode entrar em contato conosco atrav√©s das redes sociais listadas no rodap√© do site ou acessar nossa <a href="faq.html">FAQ</a>.';
        }

        if (hasKeyword('sobre')) {
            return 'Este projeto foi desenvolvido por Isabela Paiva Novais, utilizando tecnologias de ponta como TensorFlow.js para detec√ß√£o de objetos em tempo real.';
        }

        if (hasKeyword('faq')) {
            return 'Confira nossa <a href="faq.html">p√°gina de FAQ</a> para respostas √†s perguntas mais comuns sobre o uso do sistema.';
        }

        if (hasKeyword('relatorios')) {
            return 'No plano Premium, voc√™ tem acesso a relat√≥rios detalhados das detec√ß√µes, com gr√°ficos e estat√≠sticas. Acesse a <a href="relatorios.html">p√°gina de relat√≥rios</a> para mais informa√ß√µes.';
        }

        if (hasKeyword('perfil')) {
            return 'Gerencie sua conta na <a href="perfil.html">p√°gina de perfil</a>. L√° voc√™ pode atualizar informa√ß√µes, alterar senha, gerenciar assinatura e configurar alertas.';
        }

        if (hasKeyword('alertas')) {
            return 'Configure alertas para objetos espec√≠ficos no seu perfil. Quando detectados, voc√™ recebe notifica√ß√µes por e-mail. Dispon√≠vel no plano Premium!';
        }

        if (hasKeyword('autenticacao')) {
            return 'Oferecemos login seguro com 2FA (autentica√ß√£o de dois fatores), al√©m de op√ß√µes via Google e GitHub. Configure no seu perfil para maior seguran√ßa.';
        }

        if (hasKeyword('sessoes')) {
            return 'Voc√™ pode gerenciar suas sess√µes ativas no perfil, revogando acessos antigos se necess√°rio. Sempre fa√ßa logout ao terminar.';
        }

        if (hasKeyword('agradecimento')) {
            return 'De nada! üòä Se precisar de mais alguma coisa, √© s√≥ perguntar.';
        }

        // Resposta padr√£o aprimorada com sugest√µes e tentativa de resposta gen√©rica
        // Tentar encontrar palavras-chave parciais ou contextos
        const partialKeywords = {
            'detec√ß√£o': 'Nosso sistema detecta objetos em tempo real usando IA. Suportamos pessoas, animais e objetos comuns!',
            'pre√ßo': 'Confira nossos planos na <a href="assinatura.html">p√°gina de assinatura</a>. Temos gratuito e premium.',
            'ajuda': 'Estou aqui para ajudar! Pergunte sobre detec√ß√£o, planos, privacidade ou suporte.',
            'problema': 'Se voc√™ est√° com problemas, acesse nossa <a href="faq.html">FAQ</a> ou entre em contato pelo suporte.',
            'como': 'Para usar: clique em "Ativar Webcam", permita acesso e posicione objetos. √â autom√°tico!',
            'o que': 'Somos um sistema de detec√ß√£o de objetos em tempo real com TensorFlow.js.',
            'por que': 'Para seguran√ßa, monitoramento ou aprendizado. Tudo processado localmente no navegador.',
            'quando': 'O sistema funciona 24/7 online, sem instala√ß√£o necess√°ria.',
            'onde': 'Acesse de qualquer dispositivo com c√¢mera: desktop ou mobile.',
            'quem': 'Desenvolvido por Isabela Paiva Novais. Equipe especializada em IA e web.',
            'qual': 'Qual a sua d√∫vida espec√≠fica? Posso ajudar com detec√ß√£o, planos ou suporte.'
        };

        for (const [key, response] of Object.entries(partialKeywords)) {
            if (lowerInput.includes(key)) {
                return response;
            }
        }

        // Se ainda n√£o encontrou, resposta gen√©rica com sugest√µes
        return 'Hmm, n√£o tenho certeza sobre isso. Voc√™ pode perguntar sobre detec√ß√£o de objetos, planos, como usar, privacidade, alertas, 2FA, relat√≥rios, perfil ou visite nossa <a href="faq.html">FAQ</a> para mais detalhes. O que mais posso esclarecer?';
    }
});